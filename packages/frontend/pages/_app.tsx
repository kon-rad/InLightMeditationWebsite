import '../styles/globals.css'
import type { AppProps } from 'next/app'
import Head from 'next/head'
import { ChakraProvider } from "@chakra-ui/react"
import { ApolloProvider } from '@apollo/client'
import Nav from '../components/nav'
import Footer from '../components/footer';
import apolloClient from '../lib/apollo'
import { initializeApp, getApps, getApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";

const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
  measurementId: process.env.NEXT_PUBLIC_MEASUREMENT_ID,
};

getApps().length === 0 ? initializeApp(firebaseConfig) : getApp();

// const app = initializeApp(firebaseConfig);
function MyApp({ Component, pageProps }: AppProps) {
  return (
    <ApolloProvider client={apolloClient}>
      <ChakraProvider>
        <Head>
          <title>InLight App</title>
          <meta name="description" content="Generated by InLight App" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Nav />
        <Component {...pageProps} />
        <Footer />
      </ChakraProvider>
    </ApolloProvider>
    )
}

export default MyApp